/* ==========================================================================
   Grid
   ========================================================================== */

/**
 * Example uses:
 *
 * <div class="Grid">
 *     <div class="Grid-cell u-1of2"></div>
 *     <div class="Grid-cell u-1of2"></div>
 *     <div class="Grid-cell u-1of3"></div>
 *     <div class="Grid-cell u-1of3"></div>
 * </div>
 *
 * <div class="Grid Grid--center">
 *     <div class="Grid-cell u-1of3"></div>
 *     <div class="Grid-cell u-1of3"></div>
 * </div>
 */

/* Grid container
   ========================================================================== */

/**
 * Must only contain `Grid` or `Grid-cell` components as children.
 *
 * 1. Adjustment for child element margins (half gutter size). Requires
 *    corresponding `padding` value in `Grid-cell`.
 * 2. Ensure consistent default alignment.
 * 3. Remove inter-unit whitespace that appears between `inline-block` child
 *    elements. Work for all non-monospace font-families.  If you're using a
 *    monospace base font, you will need to set the `Grid` font-family to
 *   `sans-serif` and then redeclare the monospace font on the `Grid-cell`
 *    objects.
 * 4. Protect against WebKit bug with optimizelegibility.
 */

.Grid {
    display: block;
    padding: 0;
    margin: 0 -5px; /* 1 */
    text-align: left; /* 2 */
    letter-spacing: -0.31em; /* 3 */
    text-rendering: optimizespeed; /* 4 */
}

/**
 * Opera hack
 */

.opera:-o-prefocus,
.Grid {
    word-spacing: -0.43em;
}

/**
 * Modifier: horizontally center all grid units
 * Allows for automatic unit centering irrespective of the number of
 * units in the grid.
 */

.Grid--center {
    text-align: center;
}

/**
 * Child `Grid` object adjustments
 * Used for more complex fixed-fluid hybrid grids
 */

.Grid > .Grid {
    overflow: hidden;
    margin-right: 0;
    margin-left: 0;
}

/* Grid cell
   ========================================================================== */

/**
 * No explicit width by default. Rely on combining `Grid-cell` with a dimension
 * utility, e.g., `<div class="Grid-cell u-1of2"></div>`.
 *
 * 1. Fundamentals of the non-float grid layout mechanism.
 * 2. Apply grid gutter (half gutter size). Mirrors corresponding `margin`
 *    value in `Grid`.
 * 3. Controls vertical positioning of units.
 * 4. Keeps content correctly aligned with the grid direction.
 * 5. Reset text defaults.
 */

.Grid-cell {
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    width: 100%;
    display: inline-block; /* 1 */
    margin: 0;
    padding: 0 5px; /* 2 */
    vertical-align: top; /* 3 */
    text-align: left; /* 4 */
    letter-spacing: normal; /* 5 */
    word-spacing: normal; /* 5 */
    text-rendering: auto; /* 5 */
}

/**
 * Modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `Grid` object.
 */

.Grid-cell--center {
    display: block;
    margin: 0 auto;
}
